; Asm codes generated by Shanghai Haier C Compiler
; HRCO, Ver: 1.0,0137

#INCLUDE       	<ES7P0693.INC>
#INCLUDE       	<OPERATION.INC>
	PUBLIC         	_#T0
	EXTERN         	MUL_TEMP
	EXTERN         	MUL_TEMP
	PUBLIC         	_delay_ms
	PUBLIC         	_delay_msDATA
	PUBLIC         	_delay_us
	PUBLIC         	_delay_usDATA
_delay_ms_i_2	EQU            	_delay_msDATA + 0X2		; Bank 0
_delay_us_i_5	EQU            	_delay_usDATA + 0X2		; Bank 0
#TMP	EQU            	?_TMP+ 0X0		; Bank 0
?_TMP_RET	EQU            	?_TMP		; Bank 0
_MULA_0#sh	EQU            	(MULA - 0X6080) % 0X40 + 0xC0		; Bank 0
_MULB_0#sh	EQU            	(MULB - 0X6080) % 0X40 + 0xC0		; Bank 0
_MULL_0#sh	EQU            	(MULL - 0X6080) % 0X40 + 0xC0		; Bank 0
_MULH_0#sh	EQU            	(MULH - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVEL_0#sh	EQU            	(DIVEL - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVEM_0#sh	EQU            	(DIVEM - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVSL_0#sh	EQU            	(DIVSL - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVSH_0#sh	EQU            	(DIVSH - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVQL_0#sh	EQU            	(DIVQL - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVQM_0#sh	EQU            	(DIVQM - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVRL_0#sh	EQU            	(DIVRL - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVRH_0#sh	EQU            	(DIVRH - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVC_0#sh	EQU            	(DIVC - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVEU_0#sh	EQU            	(DIVEU - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVEH_0#sh	EQU            	(DIVEH - 0X6080) % 0X40 + 0xC0		; Bank 0
_FRAH_0#sh	EQU            	(FRAH - 0X6080) % 0X40 + 0xC0		; Bank 0
_FRAL_0#sh	EQU            	(FRAL - 0X6080) % 0X40 + 0xC0		; Bank 0
	_DESC          	delay_ms,0X0,0X0

SECTION1delay_ms	UNINTIAL       	0		; Bank 0
	ORG            	0X89		; Bank 0
_delay_msDATA	RSEG           	0X4		; Bank 0
delay_ms#	CSEG           
_delay_ms
; /**************************************************************************
; * 版权声明：Copyright@2019 上海东软载波微电子有限公司
; * 文件名称：timer.c
; * 功能描述：定时器函数
; * 函数列表：delay_ms
; 			delay_us
; * 文件作者：Ljj  
; * 文件版本： 
; * 完成日期：2023-08-23	
; * 修订历史：
; * 修订日期：
; **************************************************************************/
; #include <hic.h>
; #include "type.h"
; /**************************************************************************
; * 函数名称：delay_ms
; * 功能描述：毫秒级延时函数
; * 输入参数：ms   延时毫秒数，输入范围0-65535
; * 返回参数：无
; * 函数作者：
; * 完成日期：
; * 修订历史：
; * 修订日期：
; **************************************************************************/
; void delay_ms(uint16_t ms)
; {
; 	uint16_t i;
#line 30	D:\项目工程\RF-NODC-V1.0-SOFT\src\timer.c ; 	for(;ms>0;ms--)
	CLR            	BKSR
;   30:(     LABEL,    #L20275 ,            ,          )

; ITemplate_LABEL
#L20275
;   30:(      JZ_2,         ms ,            ,   #L20333)

; ITemplate_JZ1_4
	SECTION        	0x1
	MOV            	(_delay_msDATA+0X0) & 0X7F,	0x0		; Bank 1
	IOR            	(_delay_msDATA+0X0+0x1) & 0X7F,	0x0		; Bank 1
	JBC            	PSW,	0x2
	GOTO           	#L20333
; 	{
#line 32	D:\项目工程\RF-NODC-V1.0-SOFT\src\timer.c ; 		for(i = 0;i<500;i++);
;   32:(    ASGN_2,          0 ,            ,         i)

; ITemplate_CLR1_4_TMP
	CLR            	(_delay_ms_i_2) & 0X7F		; Bank 1
	CLR            	(_delay_ms_i_2+0x1) & 0X7F		; Bank 1
;   32:(     LABEL,    #L20285 ,            ,          )

; ITemplate_LABEL
#L20285
;   32:(    JGE_2U,          i ,        500 ,   #L20277)

; ITemplate_JGE1_4U
	MOVI           	0x1
	SUB            	(_delay_ms_i_2+0x1) & 0X7F,	0x0		; Bank 1
	JBS            	PSW,	0x2
	GOTO           	#L20393
	MOVI           	0xf4
	SUB            	(_delay_ms_i_2) & 0X7F,	0x0		; Bank 1
#L20393
	JBC            	PSW,	0x0
	GOTO           	#L20277
;   32:(     ADD_2,          i ,          1 ,         i)

; ITemplate_INC_2_TMP
	INC            	(_delay_ms_i_2) & 0X7F		; Bank 1
	JBS            	PSW,	0x2
	GOTO           	#L20394
	INC            	(_delay_ms_i_2+0x1) & 0X7F		; Bank 1
#L20394
;   32:(       JMP,            ,            ,   #L20285)

; ITemplate_JMP
	GOTO           	#L20285
#line 33	D:\项目工程\RF-NODC-V1.0-SOFT\src\timer.c ; 	}
;   33:(     LABEL,    #L20277 ,            ,          )

; ITemplate_LABEL
#L20277
;   30:(     SUB_2,         ms ,          1 ,        ms)

; ITemplate_DEC_2_TMP
	MOV            	(_delay_msDATA+0X0) & 0X7F,	0x0		; Bank 1
	JBS            	PSW,	0x2
	GOTO           	#L20395
	DEC            	(_delay_msDATA+0X0+0x1) & 0X7F		; Bank 1
#L20395
	DEC            	(_delay_msDATA+0X0) & 0X7F		; Bank 1
;   33:(       JMP,            ,            ,   #L20275)

; ITemplate_JMP
	GOTO           	#L20275
#line 34	D:\项目工程\RF-NODC-V1.0-SOFT\src\timer.c ; }
;   34:(     LABEL,    #L20333 ,            ,          )

; ITemplate_LABEL
#L20333
;   34:(       RET,            ,            ,          )

; ITemplate_RET
	SECTION        	0x0
	RET            			; Bank 0		; ShBank 0
	_DESC          	delay_us,0X0,0X0

SECTION1delay_us	UNINTIAL       	0		; Bank 0
	ORG            	0X8D		; Bank 0
_delay_usDATA	RSEG           	0X4		; Bank 0
delay_us#	CSEG           
_delay_us
; /**************************************************************************
; * 函数名称：delay_us
; * 功能描述：微秒级延时函数
; * 输入参数：us   延时微妙数，输入范围0-65535
; * 返回参数：无
; * 函数作者：
; * 完成日期：
; * 修订历史：
; * 修订日期：
; **************************************************************************/
; void delay_us(uint16_t us)
; {
; 	uint16_t i;
; 	
#line 50	D:\项目工程\RF-NODC-V1.0-SOFT\src\timer.c ; 	for (; us>0; us--) 
	CLR            	BKSR
;   50:(     LABEL,    #L20334 ,            ,          )

; ITemplate_LABEL
#L20334
;   50:(      JZ_2,         us ,            ,   #L20392)

; ITemplate_JZ1_4
	SECTION        	0x1
	MOV            	(_delay_usDATA+0X0) & 0X7F,	0x0		; Bank 1
	IOR            	(_delay_usDATA+0X0+0x1) & 0X7F,	0x0		; Bank 1
	JBC            	PSW,	0x2
	GOTO           	#L20392
; 	{
#line 52	D:\项目工程\RF-NODC-V1.0-SOFT\src\timer.c ; 		for(i = 0;i<20;i++);
;   52:(    ASGN_2,          0 ,            ,         i)

; ITemplate_CLR1_4_TMP
	CLR            	(_delay_us_i_5) & 0X7F		; Bank 1
	CLR            	(_delay_us_i_5+0x1) & 0X7F		; Bank 1
;   52:(     LABEL,    #L20344 ,            ,          )

; ITemplate_LABEL
#L20344
;   52:(    JGE_2U,          i ,         20 ,   #L20336)

; ITemplate_JGE1_4U
	MOVI           	0x0
	SUB            	(_delay_us_i_5+0x1) & 0X7F,	0x0		; Bank 1
	JBS            	PSW,	0x2
	GOTO           	#L20396
	MOVI           	0x14
	SUB            	(_delay_us_i_5) & 0X7F,	0x0		; Bank 1
#L20396
	JBC            	PSW,	0x0
	GOTO           	#L20336
;   52:(     ADD_2,          i ,          1 ,         i)

; ITemplate_INC_2_TMP
	INC            	(_delay_us_i_5) & 0X7F		; Bank 1
	JBS            	PSW,	0x2
	GOTO           	#L20397
	INC            	(_delay_us_i_5+0x1) & 0X7F		; Bank 1
#L20397
;   52:(       JMP,            ,            ,   #L20344)

; ITemplate_JMP
	GOTO           	#L20344
#line 53	D:\项目工程\RF-NODC-V1.0-SOFT\src\timer.c ; 	}
;   53:(     LABEL,    #L20336 ,            ,          )

; ITemplate_LABEL
#L20336
;   50:(     SUB_2,         us ,          1 ,        us)

; ITemplate_DEC_2_TMP
	MOV            	(_delay_usDATA+0X0) & 0X7F,	0x0		; Bank 1
	JBS            	PSW,	0x2
	GOTO           	#L20398
	DEC            	(_delay_usDATA+0X0+0x1) & 0X7F		; Bank 1
#L20398
	DEC            	(_delay_usDATA+0X0) & 0X7F		; Bank 1
;   53:(       JMP,            ,            ,   #L20334)

; ITemplate_JMP
	GOTO           	#L20334
#line 54	D:\项目工程\RF-NODC-V1.0-SOFT\src\timer.c ; }
;   54:(     LABEL,    #L20392 ,            ,          )

; ITemplate_LABEL
#L20392
;   54:(       RET,            ,            ,          )

; ITemplate_RET
	SECTION        	0x0
	RET            			; Bank 0		; ShBank 0

SECTION0C__Program_Files__x86__HRCC_Tools_HRCC_v1_2_0_139_tools_INCLUDE_ES7P0693_h_STATIC58	UNINTIAL       		; Bank 0
_#T0	RSEG           	0X1		; Bank 0
	END

